/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fakeifood;

import db.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author danda
 */
public class FramePrincipalCliente extends javax.swing.JFrame {

    public static int id_cliente;
    public static Carrinho carrinho;

    /**
     * Creates new form FramePrincipalCliente
     */
    public FramePrincipalCliente(int id_cliente) throws SQLException {
        initComponents();

        this.id_cliente = id_cliente;
        this.carrinho = new Carrinho();

        BuscaDados buscar = new BuscaDados();
        ResultSet rs = buscar.selectRestaurantes();

        while (rs.next()) {
            ResultSet categoriaPrincipal = buscar.selectRestauranteCategorias(rs.getInt("id_restaurante"));
            pnlPreviewRest PR = new pnlPreviewRest(rs.getString("nome_restaurante"), categoriaPrincipal.getString("nome_categoria"), rs.getInt("entrega_rapida"), rs.getInt("id_restaurante"));
            categoriaPrincipal.close();
            pnlExibicao.add(PR);
        }

        rs.close();

        ResultSet rsCat = buscar.selectCategoriasExistentes();

        while (rsCat.next()) {
            boxCategorias.addItem(rsCat.getString("nome_categoria"));
        }

        rsCat.close();

        repaint();
        revalidate();
    }

    public static Carrinho getCarrinho() {
        return carrinho;
    }

    public static int getId_cliente() {
        return id_cliente;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        pnlBasePrincipal = new javax.swing.JPanel();
        txtLogoMarca = new javax.swing.JLabel();
        txtBusca = new javax.swing.JTextField();
        btnIconEntregaRapida = new javax.swing.JButton();
        btnIconEntregaGratis = new javax.swing.JButton();
        btnIconPopular = new javax.swing.JButton();
        btnIconMaisPedidos = new javax.swing.JButton();
        btnIconPromocoes = new javax.swing.JButton();
        btnIconCategorias = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlExibicao = new javax.swing.JPanel();
        btnHistorico = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnEnderecos = new javax.swing.JButton();
        lblTipoBusca = new javax.swing.JLabel();
        boxCategorias = new javax.swing.JComboBox<>();
        btnBuscaCategoria = new javax.swing.JButton();
        btnBusca = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnConfiguracoes = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlBasePrincipal.setBackground(new java.awt.Color(255, 255, 255));
        pnlBasePrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlBasePrincipal.setMaximumSize(new java.awt.Dimension(918, 559));
        pnlBasePrincipal.setMinimumSize(new java.awt.Dimension(918, 559));
        pnlBasePrincipal.setPreferredSize(new java.awt.Dimension(918, 559));

        txtLogoMarca.setBackground(new java.awt.Color(255, 153, 102));
        txtLogoMarca.setFont(new java.awt.Font("Square721 Cn BT", 0, 36)); // NOI18N
        txtLogoMarca.setForeground(new java.awt.Color(255, 153, 102));
        txtLogoMarca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/foodeliveryPequeno.png"))); // NOI18N

        txtBusca.setText("Pesquise aqui! Digite nomes de restaurantes ou pratos");
        txtBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaActionPerformed(evt);
            }
        });

        btnIconEntregaRapida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/entregaRapida.png"))); // NOI18N
        btnIconEntregaRapida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIconEntregaRapidaActionPerformed(evt);
            }
        });

        btnIconEntregaGratis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/entregaGratis.png"))); // NOI18N
        btnIconEntregaGratis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIconEntregaGratisActionPerformed(evt);
            }
        });

        btnIconPopular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/restaurantesPopulares.png"))); // NOI18N
        btnIconPopular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIconPopularActionPerformed(evt);
            }
        });

        btnIconMaisPedidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/maisPedidos.png"))); // NOI18N
        btnIconMaisPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIconMaisPedidosActionPerformed(evt);
            }
        });

        btnIconPromocoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/promocoes.png"))); // NOI18N
        btnIconPromocoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIconPromocoesActionPerformed(evt);
            }
        });

        btnIconCategorias.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/todos.png"))); // NOI18N
        btnIconCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIconCategoriasActionPerformed(evt);
            }
        });

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pnlExibicao.setBackground(new java.awt.Color(255, 255, 255));
        pnlExibicao.setLayout(new java.awt.GridLayout(0, 2, 8, 8));
        jScrollPane1.setViewportView(pnlExibicao);

        btnHistorico.setBackground(new java.awt.Color(255, 204, 153));
        btnHistorico.setText("Histórico de pedidos");
        btnHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoricoActionPerformed(evt);
            }
        });

        jLabel2.setText("Deseja adicionar ou remover um endereço? ");

        btnEnderecos.setBackground(new java.awt.Color(255, 204, 153));
        btnEnderecos.setText("Gerencie endereços!");
        btnEnderecos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnderecosActionPerformed(evt);
            }
        });

        lblTipoBusca.setFont(new java.awt.Font("Geometr706 BlkCn BT", 0, 24)); // NOI18N
        lblTipoBusca.setForeground(new java.awt.Color(255, 153, 51));
        lblTipoBusca.setText("Todos os restaurantes");

        btnBuscaCategoria.setBackground(new java.awt.Color(255, 204, 153));
        btnBuscaCategoria.setText("Busque por categoria!");
        btnBuscaCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaCategoriaActionPerformed(evt);
            }
        });

        btnBusca.setBackground(new java.awt.Color(255, 204, 153));
        btnBusca.setText("Busque");
        btnBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Selecione uma categoria:");

        btnConfiguracoes.setBackground(new java.awt.Color(255, 204, 153));
        btnConfiguracoes.setText("Configurações");
        btnConfiguracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfiguracoesActionPerformed(evt);
            }
        });

        btnSair.setBackground(new java.awt.Color(255, 204, 153));
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBasePrincipalLayout = new javax.swing.GroupLayout(pnlBasePrincipal);
        pnlBasePrincipal.setLayout(pnlBasePrincipalLayout);
        pnlBasePrincipalLayout.setHorizontalGroup(
            pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(pnlBasePrincipalLayout.createSequentialGroup()
                .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBasePrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBasePrincipalLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBasePrincipalLayout.createSequentialGroup()
                                .addComponent(txtLogoMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBusca, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                            .addComponent(boxCategorias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBusca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscaCategoria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHistorico, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConfiguracoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlBasePrincipalLayout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(jLabel2)
                        .addGap(37, 37, 37)
                        .addComponent(btnEnderecos, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlBasePrincipalLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTipoBusca)
                            .addGroup(pnlBasePrincipalLayout.createSequentialGroup()
                                .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnIconEntregaRapida, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnIconCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(54, 54, 54)
                                .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnIconPopular, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnIconMaisPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(52, 52, 52)
                        .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnIconEntregaGratis, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnIconPromocoes, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 70, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlBasePrincipalLayout.setVerticalGroup(
            pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBasePrincipalLayout.createSequentialGroup()
                .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBasePrincipalLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHistorico)
                            .addComponent(btnBusca))
                        .addGap(18, 18, 18)
                        .addComponent(btnConfiguracoes))
                    .addGroup(pnlBasePrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtLogoMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boxCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(btnBuscaCategoria))))
                .addGap(18, 18, 18)
                .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSair)
                        .addComponent(btnEnderecos))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBasePrincipalLayout.createSequentialGroup()
                        .addComponent(btnIconEntregaRapida, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnIconCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBasePrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlBasePrincipalLayout.createSequentialGroup()
                            .addComponent(btnIconEntregaGratis, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnIconPromocoes, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBasePrincipalLayout.createSequentialGroup()
                            .addComponent(btnIconPopular, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnIconMaisPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTipoBusca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBasePrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBasePrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnIconCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIconCategoriasActionPerformed
        try {
            // TODO add your handling code here:
            lblTipoBusca.setText("Todos os restaurantes");
            pnlExibicao.removeAll();
            BuscaDados buscar = new BuscaDados();
            ResultSet rs = buscar.selectRestaurantes();

            while (rs.next()) {
                ResultSet categoriaPrincipal = buscar.selectRestauranteCategorias(rs.getInt("id_restaurante"));
                pnlPreviewRest PR = new pnlPreviewRest(rs.getString("nome_restaurante"), categoriaPrincipal.getString("nome_categoria"), rs.getInt("entrega_rapida"), rs.getInt("id_restaurante"));
                categoriaPrincipal.close();
                pnlExibicao.add(PR);
            }

            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipalCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIconCategoriasActionPerformed

    private void btnIconPromocoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIconPromocoesActionPerformed
        try {
            // TODO add your handling code here:
            lblTipoBusca.setText("Restaurantes em promoção");
            pnlExibicao.removeAll();
            BuscaDados BD = new BuscaDados();
            ResultSet restaurantes = BD.selectRestaurantes();
            int id_pratoAtual = 0;
            int count = 0;
            float valorPrato = 0;
            // boolean q verifica se tal restaurante está na promocao
            boolean naPromocao = false;
            // boolean q verifica se houve pelo menos um restaurante na promoção
            boolean houvePromocao = false;

            // gira de restaurante em restaurante vendo os precos medios de cada prato, se houver algum que está com um
            // preço menor do que a metade da media de preços, ai esse restaurante tem promoção
            while (restaurantes.next()) {
                ResultSet rs = BD.selectPrecoMedioAnterior(restaurantes.getInt("id_restaurante"));
                if (rs.isClosed()) {

                } else {
                    count = 0;
                    rs.next();
                    String nomePrato = rs.getString("nome_prato");
                    do {
                        // a gente conta o numero de pratos com aquele id, pega todos os preços dele dessa semana
                        // e so no final divide por esse count
                        if (rs.getString("nome_prato").equals(nomePrato)) {
                            count++;
                            id_pratoAtual = rs.getInt("id_prato");
                            valorPrato += Float.parseFloat(rs.getString("valor_preco"));
                        } else {
                            valorPrato = (valorPrato / count);
                            id_pratoAtual = rs.getInt("id_prato");
                            ResultSet precoAtual = BD.selectPratoPrecos(id_pratoAtual);

                            float precoAtualFloat = Float.parseFloat(precoAtual.getString("valor_preco"));
                            // verifica se o preço médio é maior do que o preço de hoje
                            if (precoAtualFloat <= (valorPrato / 2)) {
                                naPromocao = true;
                            }
                            nomePrato = rs.getString("nome_prato");

                            count = 0;
                            valorPrato = 0;
                            valorPrato += Float.parseFloat(rs.getString("valor_preco"));
                            count++;

                            precoAtual.close();
                        }

                    } while (rs.next());

                    //verifica o último prato da lista
                    valorPrato = (valorPrato / count);
                    ResultSet precoAtual = BD.selectPratoPrecos(id_pratoAtual);

                    float precoAtualFloat = Float.parseFloat(precoAtual.getString("valor_preco"));
                    // verifica se o preço médio é maior do que o preço de hoje
                    if (precoAtualFloat <= (valorPrato / 2)) {
                        naPromocao = true;
                    }
                    precoAtual.close();
                    //fim da verificação

                    rs.close();
                    if (naPromocao) {
                        ResultSet categoria = BD.selectRestauranteCategorias(restaurantes.getInt("id_restaurante"));
                        pnlExibicao.add(new pnlPreviewRest(restaurantes.getString("nome_restaurante"), categoria.getString("nome_categoria"),
                                restaurantes.getInt("entrega_rapida"), restaurantes.getInt("id_restaurante")));
                        categoria.close();
                        houvePromocao = true;
                    }
                    naPromocao = false;
                }
            }
            if (!houvePromocao) {
                lblTipoBusca.setText("Não há restaurantes em promoção.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipalCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIconPromocoesActionPerformed

    private void btnIconMaisPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIconMaisPedidosActionPerformed
        try {
            // TODO add your handling code here:
            lblTipoBusca.setText("Restaurantes top sellers");
            pnlExibicao.removeAll();
            BuscaDados BD = new BuscaDados();
            ResultSet listaPratos = BD.selectPratoMaisVendidoDia();
            ArrayList<Integer> restaurantes = new ArrayList<>();
            int contadorRestaurantes = 0;

            while (listaPratos.next()) {
                if (contadorRestaurantes == 5) {

                } else {
                    if (restaurantes.contains(listaPratos.getInt("id_restaurante"))) {

                    } else {
                        restaurantes.add(listaPratos.getInt("id_restaurante"));
                        contadorRestaurantes++;
                    }
                }
            }
            listaPratos.close();
            for (int i = 0; i < contadorRestaurantes; i++) {
                ResultSet restaurante = BD.selectRestauranteSelecionado(restaurantes.get(i));
                ResultSet categoria = BD.selectRestauranteCategorias(restaurante.getInt("id_restaurante"));

                pnlPreviewRest PR = new pnlPreviewRest(restaurante.getString("nome_restaurante"), categoria.getString("nome_categoria"),
                        restaurante.getInt("entrega_rapida"), restaurante.getInt("id_restaurante"));
                pnlExibicao.add(PR);
                restaurante.close();
                categoria.close();
            }
            repaint();
            revalidate();
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipalCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnIconMaisPedidosActionPerformed

    private void btnIconPopularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIconPopularActionPerformed
        try {
            // TODO add your handling code here:
            lblTipoBusca.setText("Restaurantes populares");
            pnlExibicao.removeAll();
            BuscaDados BD = new BuscaDados();
            ResultSet restaurantes = BD.selectRestaurantes();
            while (restaurantes.next()) {

                ResultSet pratos = BD.selectRestaurantePratosPrecosAtuais(restaurantes.getInt("id_restaurante"));
                boolean popular = true;
                while (pratos.next()) {
                    float preco = Float.parseFloat(pratos.getString("valor_preco"));
                    if (preco > 10) {
                        popular = false;
                    }
                }
                pratos.close();
                if (popular) {
                    ResultSet categoria = BD.selectRestauranteCategorias(restaurantes.getInt("id_restaurante"));
                    pnlPreviewRest PR = new pnlPreviewRest(restaurantes.getString("nome_restaurante"), categoria.getString("nome_categoria"),
                            restaurantes.getInt("entrega_rapida"), restaurantes.getInt("id_restaurante"));
                    pnlExibicao.add(PR);
                    categoria.close();
                }
            }
            repaint();
            revalidate();
            restaurantes.close();
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipalCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIconPopularActionPerformed

    private void btnIconEntregaGratisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIconEntregaGratisActionPerformed
        try {
            // TODO add your handling code here:
            lblTipoBusca.setText("Restaurantes com entrega grátis");
            pnlExibicao.removeAll();
            BuscaDados BD = new BuscaDados();
            ResultSet restaurantes = BD.selectRestaurantes();
            while (restaurantes.next()) {
                if (restaurantes.getInt("entrega_rapida") == 0) {
                    ResultSet categoria = BD.selectRestauranteCategorias(restaurantes.getInt("id_restaurante"));
                    pnlPreviewRest PR = new pnlPreviewRest(restaurantes.getString("nome_restaurante"), categoria.getString("nome_categoria"),
                            restaurantes.getInt("entrega_rapida"), restaurantes.getInt("id_restaurante"));
                    pnlExibicao.add(PR);
                    categoria.close();
                }
            }
            repaint();
            revalidate();
            restaurantes.close();
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipalCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnIconEntregaGratisActionPerformed

    private void btnIconEntregaRapidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIconEntregaRapidaActionPerformed
        try {
            // TODO add your handling code here:
            lblTipoBusca.setText("Restaurantes com entrega rápida");
            pnlExibicao.removeAll();
            BuscaDados BD = new BuscaDados();
            ResultSet restaurantes = BD.selectRestaurantes();
            while (restaurantes.next()) {
                if (restaurantes.getInt("entrega_rapida") == 1) {
                    ResultSet categoria = BD.selectRestauranteCategorias(restaurantes.getInt("id_restaurante"));
                    pnlPreviewRest PR = new pnlPreviewRest(restaurantes.getString("nome_restaurante"), categoria.getString("nome_categoria"),
                            restaurantes.getInt("entrega_rapida"), restaurantes.getInt("id_restaurante"));
                    pnlExibicao.add(PR);
                    categoria.close();
                }
            }
            repaint();
            revalidate();
            restaurantes.close();
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipalCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnIconEntregaRapidaActionPerformed

    private void txtBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscaActionPerformed

    private void btnHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoricoActionPerformed
        // TODO add your handling code here:

        FrameHistoricoPedidos historico = new FrameHistoricoPedidos();
        historico.setVisible(true);
    }//GEN-LAST:event_btnHistoricoActionPerformed

    private void btnEnderecosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnderecosActionPerformed
        try {
            FrameAddEndereco enderecos = new FrameAddEndereco();
            enderecos.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipalCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnderecosActionPerformed

    private void btnBuscaCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaCategoriaActionPerformed
        try {
            // TODO add your handling code here:
            lblTipoBusca.setText("Sua busca por categoria");
            String selecionada = "" + boxCategorias.getSelectedItem();
            BuscaDados BD = new BuscaDados();
            int id = BD.selectIDCategoria(selecionada);
            pnlExibicao.removeAll();
            ResultSet rs = BD.selectCategoriasRestaurantes(id);
            if (rs.isClosed()) {
                lblTipoBusca.setText("Não há restaurantes nessa categoria");
            } else {
                while (rs.next()) {
                    ResultSet categoriaPrincipal = BD.selectRestauranteCategorias(rs.getInt("id_restaurante"));
                    pnlPreviewRest PR = new pnlPreviewRest(rs.getString("nome_restaurante"), categoriaPrincipal.getString("nome_categoria"), rs.getInt("entrega_rapida"), rs.getInt("id_restaurante"));
                    categoriaPrincipal.close();
                    pnlExibicao.add(PR);
                }

                rs.close();
                repaint();
                revalidate();
            }
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipalCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnBuscaCategoriaActionPerformed

    private void btnBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaActionPerformed
        try {
            // TODO add your handling code here:
            lblTipoBusca.setText("Sua busca por nome de restaurante ou prato");
            String busca = txtBusca.getText();
            BuscaDados BD = new BuscaDados();
            pnlExibicao.removeAll();
            ResultSet rs = BD.selectResultadoBusca(busca);
            if (rs.isClosed()) {
                lblTipoBusca.setText("Não há restaurantes com esse nome, ou prato");
            } else {
                while (rs.next()) {
                    ResultSet categoriaPrincipal = BD.selectRestauranteCategorias(rs.getInt("id_restaurante"));
                    pnlPreviewRest PR = new pnlPreviewRest(rs.getString("nome_restaurante"), categoriaPrincipal.getString("nome_categoria"), rs.getInt("entrega_rapida"), rs.getInt("id_restaurante"));
                    categoriaPrincipal.close();
                    pnlExibicao.add(PR);
                }

                rs.close();
                repaint();
                revalidate();
            }

            repaint();
            revalidate();
        } catch (SQLException ex) {
            Logger.getLogger(FramePrincipalCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscaActionPerformed

    private void btnConfiguracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfiguracoesActionPerformed
        // TODO add your handling code here:
        FrameConfiguracaoCliente CC = new FrameConfiguracaoCliente();
        CC.setVisible(true);
    }//GEN-LAST:event_btnConfiguracoesActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        dispose();
        FrameInicial FI = new FrameInicial();
        FI.setVisible(true);
    }//GEN-LAST:event_btnSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipalCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipalCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipalCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipalCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new FramePrincipalCliente().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxCategorias;
    private javax.swing.JButton btnBusca;
    private javax.swing.JButton btnBuscaCategoria;
    private javax.swing.JButton btnConfiguracoes;
    private javax.swing.JButton btnEnderecos;
    private javax.swing.JButton btnHistorico;
    private javax.swing.JButton btnIconCategorias;
    private javax.swing.JButton btnIconEntregaGratis;
    private javax.swing.JButton btnIconEntregaRapida;
    private javax.swing.JButton btnIconMaisPedidos;
    private javax.swing.JButton btnIconPopular;
    private javax.swing.JButton btnIconPromocoes;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTipoBusca;
    private javax.swing.JPanel pnlBasePrincipal;
    private javax.swing.JPanel pnlExibicao;
    private javax.swing.JTextField txtBusca;
    private javax.swing.JLabel txtLogoMarca;
    // End of variables declaration//GEN-END:variables
}
